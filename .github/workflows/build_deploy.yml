name: Build and Deploy Artifact
on:
  workflow_call:
jobs:
  pre_build:
    uses: elevatedthird/actions/.github/workflows/pre_build.yml@main

  test_and_build:
    name: Test and Build project
    runs-on: ubuntu-latest
    needs: pre_build
    env:
      composer_version: '2.5.4'
    steps:
      - uses: actions/checkout@v4
      - name: Dotenv Action
        uses: falti/dotenv-action@v1.1.2
        with:
          path: .env
          export-variables: true
          export-variables-prefix: DOTENV_
          keys-case: bypass

      - name: Enable Debug Logging
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - name: Set THEME_PATH env variable.
        run: |
          export WEBROOT=$(php -r "echo json_decode(file_get_contents('composer.json'), true)['extra']['drupal-scaffold']['locations']['web-root'];")
          echo "THEME_PATH=$WEBROOT/themes/custom/${{ env.DOTENV_THEME_NAME }}" >> $GITHUB_ENV
          echo ${{ env.THEME_PATH }}

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php_version }}
          tools: composer:${{ env.composer_version }}
          extensions: gd, imagick

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DOTENV_NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.THEME_PATH }}/package-lock.json

      - name: Validate composer.json
        run: |
          composer validate

      - name: Install composer dependencies.
        continue-on-error: true
        run: |
          composer install --prefer-dist --no-progress -o -n

      - name: Clean project.
        run: |
          # composer --no-dev update
          rm -rf ${{ env.THEME_PATH }}/node_modules
          rm -rf .editorconfig .env .github .git .gitattributes .gitignore .lando.yml .tugboat

      - name: Generate Deployment Artifact
        run: |
          mkdir -p /tmp/deploy-artifact
          mv $GITHUB_WORKSPACE/{.[!.],}* /tmp/deploy-artifact/
          tar -czf deploy-artifact.tar.gz -C /tmp deploy-artifact
          mkdir -p artifacts
          mv deploy-artifact.tar.gz artifacts/

      # - name: Inspect tar files
      #   run: |
      #     mkdir -p untar
      #     mkdir -p test
      #     tar -xf ./artifacts/deploy-artifact.tar.gz -C untar
      #     mv untar/deploy-artifact/{.[!.],}* test
      #     ls -la test
      #     ls -la test/docroot/themes/custom/kinetic

      - name: Upload Deployment Artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: deploy-artifact
          path: artifacts/deploy-artifact.tar.gz

  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
    needs: test_and_build
    env:
      DESTINATION_REPOSITORY_BRANCH: ${{ github.ref_name }}
      TAG: ${{ github.ref_name }}-${{ github.run_number }}
      TAG_MESSAGE: Github Actions build ${{ github.run_number }}
      COMMIT_MESSAGE: Github Actions build ${{ github.run_number }}
      USER_EMAIL: github-actions@github.com
      USER_NAME: github-actions
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    steps:
      - name: Enable Debug Logging
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            .env
            .github
          sparse-checkout-cone-mode: false
          path: gh

      - name: Dotenv Action
        uses: falti/dotenv-action@v1.1.2
        with:
          path: gh/.env
          export-variables: true
          export-variables-prefix: DOTENV_
          keys-case: bypass

      # Ensure variable is formatted like user@host:port
      - name: Get the host name from the destination repository URL
        run: |
          git_host=$(echo ${{ env.DOTENV_DESTINATION_REPOSITORY }} | sed -n 's/.*@\([^:]*\):.*/\1/p')
          echo "REMOTE_GIT_HOST=$git_host" >> $GITHUB_ENV

      - name: Install SSH key
        uses: elevatedthird/actions/.github/workflows/ssh-agent/action.yml@main
        with:
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_host: ${{ env.REMOTE_GIT_HOST }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}

      - name: Clean directory
        run: rm -rf gh

      - name: Clone the destination repository
        run: git clone ${{ env.DOTENV_DESTINATION_REPOSITORY }} .

      - name: Checkout a branch based on the source branch
        run: |
          git config user.name $USER_NAME
          git config user.email $USER_EMAIL
          git checkout $DESTINATION_REPOSITORY_BRANCH || git checkout -B $DESTINATION_REPOSITORY_BRANCH
          git rm -rf .
          git clean -fxd

      - name: Download deploy artifact
        if: ${{ !env.ACT }}
        uses: actions/download-artifact@v4
        with:
          name: deploy-artifact
          path: ${{ runner.temp }}

      - name: Unzip Deploy Artifact into workspace
        run: |
          tar -xf ${{ runner.temp }}/deploy-artifact.tar.gz -C ${{ github.workspace }}
          mv ${{ github.workspace }}/deploy-artifact/{.[!.],}* ${{ github.workspace }}
          rm -rf ${{ github.workspace }}/deploy-artifact

      - name: Create gh_actions settings.php file
        run: |
          WEBROOT=$(php -r "echo json_decode(file_get_contents('composer.json'), true)['extra']['drupal-scaffold']['locations']['web-root'];")
          echo "<?php \$settings['deployment_identifier'] = '${TAG}';" > settings.gh_actions.php
          mv settings.gh_actions.php ${{ github.workspace }}/$WEBROOT/sites/default/
          chmod 644 settings.gh_actions.php
          cat ${{ github.workspace }}/$WEBROOT/sites/default/settings.gh_actions.php

      - name: Add files to git
        run: git add -A --force

      - name: Create a commit
        run: git commit -m "${COMMIT_MESSAGE}" --no-verify

      # Only tag if pushing to main or master branch.
      - name: Tag the commit
        if: ${{ (github.ref_name == 'main' || github.ref_name == 'master') }}
        run: git tag -a "${TAG}" -m "${TAG_MESSAGE}"

      - name: Push the commit to the destination repository
        run: |
          git config --global push.default current
          git push origin $DESTINATION_REPOSITORY_BRANCH --force
          git push origin $TAG

  # post_deploy:
  #   uses: elevatedthird/actions/.github/workflows/post_deploy.yml@main
  #   secrets: inherit